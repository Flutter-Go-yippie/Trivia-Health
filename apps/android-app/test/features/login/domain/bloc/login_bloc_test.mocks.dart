// Mocks generated by Mockito 5.4.5 from annotations
// in android_app/test/features/login/domain/bloc/login_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:android_app/features/login/domain/repositories/login_repository.dart'
    as _i2;
import 'package:android_app/features/login/domain/repositories/remember_me_repository.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i2.LoginRepository {
  MockLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> login(
    String? email,
    String? password,
    bool? rememberMe,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
            rememberMe,
          ],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
              rememberMe,
            ],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> signUp(
    String? email,
    String? password,
    int? height,
    int? weight,
    int? age,
    String? goal,
    List<String>? healthIssues,
    String? timeframe,
    String? fitnessLevel,
    int? availableMinutes,
    bool? rememberMe,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            password,
            height,
            weight,
            age,
            goal,
            healthIssues,
            timeframe,
            fitnessLevel,
            availableMinutes,
            rememberMe,
          ],
        ),
        returnValue: _i3.Future<String>.value(_i4.dummyValue<String>(
          this,
          Invocation.method(
            #signUp,
            [
              email,
              password,
              height,
              weight,
              age,
              goal,
              healthIssues,
              timeframe,
              fitnessLevel,
              availableMinutes,
              rememberMe,
            ],
          ),
        )),
      ) as _i3.Future<String>);
}

/// A class which mocks [RememberMeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRememberMeRepository extends _i1.Mock
    implements _i5.RememberMeRepository {
  MockRememberMeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> rememberUser({
    required String? jwtToken,
    required String? email,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rememberUser,
          [],
          {
            #jwtToken: jwtToken,
            #email: email,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
